apply plugin: 'maven-publish'
apply plugin: 'signing'

group = 'games.rednblack.hyperlap2d'
version = '0.0.7'
ext.artifact = 'runtime-libgdx'
ext.packaging = 'jar'

def isDevBuild
def isCiBuild
def isReleaseBuild

def sonatypeRepositoryUrl

//set build variables based on build type (release, continuous integration, development)
if (hasProperty("RELEASE")) {
    isReleaseBuild = true
    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
    println "Performing release build"
} else if (hasProperty("SNAPSHOT")) {
    isCiBuild = true
    version += "-SNAPSHOT"
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
    println "Performing snapshot build"
} else {
    isDevBuild = true
    println "Performing local build"
}

def getRepositoryUsername = {
    return project.hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : "$System.env.NEXUS_USERNAME"
}

def getRepositoryPassword = {
    return project.hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : "$System.env.NEXUS_PASSWORD"
}

repositories {
    mavenCentral()
}

task artifactDocs(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task artifactSources(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives artifactDocs
    archives artifactSources
}

if (isReleaseBuild) {
    signing {
        useGpgCmd()
        sign configurations.archives
    }
} else {
    task signArchives {
        // do nothing
    }
}

publishing {
    publications {
        mavenRelease(MavenPublication) {
            from components.java
            // 配置你的 groupId, artifactId 和版本
            groupId group
            artifactId project.ext.artifact
            version "$version"
        }
    }
    repositories {
        maven {
            // 目标 Maven 仓库的 URL
            url sonatypeRepositoryUrl
            // 相关认证信息
            credentials {
                username getRepositoryUsername()
                password getRepositoryPassword()
            }
        }
    }
}